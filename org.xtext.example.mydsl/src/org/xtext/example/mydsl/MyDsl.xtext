// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "ProyectoGrupo1" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Company returns Company:
	'Company'
	name=EString
	('nit' nit=EString)?
	OBJECT_START
	'dashboards' EQUALS LIST_START dashboards+=Dashboard (COMA dashboards+=Dashboard)* LIST_END 
	'DBServers' EQUALS LIST_START DBServers+=DBServer (COMA DBServers+=DBServer)* LIST_END
	OBJECT_END ;

	/**
	 *  DASHBOARDS
	 */
Dashboard returns Dashboard:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	'panels' EQUALS LIST_START panels+=Panel (COMA panels+=Panel)* LIST_END
	OBJECT_END;

Panel returns Panel:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON 
	'elements' EQUALS LIST_START elements+=Element (COMA elements+=Element)* LIST_END
	OBJECT_END;

Element returns Element:
	Table | Menu | LineChart | BarChart | RadarChart | PieChart;

Table returns Table:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('title' EQUALS title=EString SEMICOLON )?
	('registersPerPage' EQUALS registersPerPage=EInt SEMICOLON)?
	('actions' EQUALS actions=Action SEMICOLON)?
	(search?='search' SEMICOLON)?
	(add?='add' SEMICOLON)?
	'columns' EQUALS LIST_START columns+=Column (COMA columns+=Column)* LIST_END 
	OBJECT_END;

Menu returns Menu:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('title' EQUALS title=EString SEMICOLON)?
	'options' EQUALS LIST_START options+=Option (COMA options+=Option)* LIST_END 
	OBJECT_END;

Option returns Option:
	{Option}
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('icon' EQUALS icon=EString SEMICOLON)?
	('title' EQUALS title=EString SEMICOLON)?
	('urlComponent' EQUALS urlComponent=EString SEMICOLON)?
	OBJECT_END;

LineChart returns LineChart:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('title' EQUALS title=EString SEMICOLON)
	('legendPosition' EQUALS legendPosition=PositionOptions SEMICOLON)?
	('labelStringXAxes' EQUALS labelStringXAxes=EString SEMICOLON)?
	('colorGridLinesXAxes' EQUALS colorGridLinesXAxes=EString SEMICOLON)?
	('labelStringYAxes' EQUALS labelStringYAxes=EString SEMICOLON)?
	('colorGridLinesYAxes' EQUALS colorGridLinesYAxes=EString SEMICOLON)?
	(displayGridLinesXAxes?='displayGridLinesXAxes' SEMICOLON)?
	(displayGridLinesYAxes?='displayGridLinesYAxes' SEMICOLON)?
	'data' EQUALS LIST_START data+=Data (COMA data+=Data)* LIST_END 
	'labels' EQUALS LIST_START labels+=Label (COMA labels+=Label)* LIST_END 
	OBJECT_END;

BarChart returns BarChart:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('title' EQUALS title=EString SEMICOLON)
	('legendPosition' EQUALS legendPosition=PositionOptions SEMICOLON)?
	('labelStringXAxes' EQUALS labelStringXAxes=EString SEMICOLON)?
	('colorGridLinesXAxes' EQUALS colorGridLinesXAxes=EString SEMICOLON)?
	('labelStringYAxes' EQUALS labelStringYAxes=EString SEMICOLON)?
	('colorGridLinesYAxes' EQUALS colorGridLinesYAxes=EString SEMICOLON)?
	('barPercentage' EQUALS barPercentage=EFloat SEMICOLON)
	(displayGridLinesXAxes?='displayGridLinesXAxes' SEMICOLON)?
	(displayGridLinesYAxes?='displayGridLinesYAxes' SEMICOLON)?
	'data' EQUALS LIST_START data+=Data (COMA data+=Data)* LIST_END 
	'labels' EQUALS LIST_START labels+=Label (COMA labels+=Label)* LIST_END 
	OBJECT_END;

RadarChart returns RadarChart:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('title' EQUALS title=EString SEMICOLON)
	('legendPosition' EQUALS legendPosition=PositionOptions SEMICOLON)?
	(angleLinesDisplay?='angleLinesDisplay' SEMICOLON)
	'data' EQUALS LIST_START data+=Data (COMA data+=Data)* LIST_END 
	'labels' EQUALS LIST_START labels+=Label (COMA labels+=Label)* LIST_END 
	OBJECT_END;

PieChart returns PieChart:
	OBJECT_START
	'PIECHART'
	'name' EQUALS name=EString SEMICOLON
	('title' EQUALS title=EString SEMICOLON)?
	('legendPosition' EQUALS legendPosition=PositionOptions SEMICOLON)?
	'data' EQUALS LIST_START data+=Data (COMA data+=Data)* LIST_END 
	'labels' EQUALS LIST_START labels+=Label (COMA labels+=Label)* LIST_END 
	OBJECT_END;

Action returns Action:
	{Action}
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('columnTitle' EQUALS columnTitle=EString SEMICOLON)?
	('position' EQUALS position=PositionOptions SEMICOLON)?
	(add?='add' SEMICOLON)?
	(filter?='filter' SEMICOLON)?
	(edit?='edit' SEMICOLON)?
	(delete?='delete' SEMICOLON)?
	OBJECT_END;

Column returns Column:
	{Column}
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('title' EQUALS title=EString SEMICOLON)?
	('source' EQUALS source=[Collection|EString] SEMICOLON)?
	(filter?='filter' SEMICOLON)?
	(editable?='editable' SEMICOLON)?
	OBJECT_END;

Data returns Data:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('category' EQUALS category=EString SEMICOLON)?
	('borderColor' EQUALS borderColor=Colors SEMICOLON)?
	('backgroundColor' EQUALS backgroundColor=Colors SEMICOLON)?
	('borderDash' EQUALS borderDash=EInt SEMICOLON)?
	(fill?='fill' SEMICOLON)?
	'data' EQUALS  LIST_START data+=[Collection|EString] (COMA data+=[Collection|EString])* LIST_END 
	OBJECT_END;

Label returns Label:
	{Label}
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	OBJECT_END;

	/**
	 *  DATABASE SERVER
	 */
DBServer returns DBServer:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('systemManager' EQUALS systemManager=DBSystem SEMICOLON)?
	('token' EQUALS token=EString SEMICOLON)?
	('password' EQUALS password=EString SEMICOLON)?
	'relatedCollections' EQUALS LIST_START relatedCollections+=Collection (COMA relatedCollections+=Collection)* LIST_END 
	OBJECT_END;

Collection returns Collection:
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	'documents' EQUALS LIST_START documents+=Document (COMA documents+=Document)* LIST_END 
	OBJECT_END;

Document returns Document:
	{Document}
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	'attributes' EQUALS LIST_START attributes+=Attribute ( COMA  attributes+=Attribute)* LIST_END 
	OBJECT_END;
	
Attribute returns Attribute:
	{Attribute}
	OBJECT_START
	'name' EQUALS name=EString SEMICOLON
	('type' type=EString SEMICOLON)?
	OBJECT_END;

enum DBSystem returns DBSystem:
	MONGODB='MONGODB' | REDIS='REDIS';

enum Colors returns Colors:
	white='white' | blue='blue' | red='red' | green='green' | gray='gray' | yellow='yellow' | black='black' | cyan='cyan'
	| magenta='magenta' | silver='silver' | maroon='maroon' | olive='olive' | purple='purple' | teal='teal' |
	navy='navy';

enum PositionOptions returns PositionOptions:
	left='left' | right='right' | center='center' | top='top' | bottom='bottom';



	/* 
	 * TERMINALES
	*/
terminal EQUALS:
	"=";

terminal SEMICOLON:
	";";

terminal LIST_START:
	"[";

terminal LIST_END:
	"]";

terminal COMA:
	",";

terminal OBJECT_START:
	"{";

terminal OBJECT_END:
	"}";
	
EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

